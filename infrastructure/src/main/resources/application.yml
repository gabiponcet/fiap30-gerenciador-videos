#amqp:
#  admin:
#    auto-create: false
#  queues:
#    production-status-changed:
#      exchange: production.events
#      routing-key: production.status-changed
#      queue: production.status-changed.queue
#    order-payed:
#      exchange: order.events
#      routing-key: order.payed
#      queue: order.payed.queue

server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enable: true
    mime-types: text/html,text/xml,text/plain,text/css, text/javascript, application/javascript, application/json
    min-response-size: 1024
  undertow:
    threads:
      worker: 64
      io: 4
spring:
  datasource:
    url: jdbc:postgresql://${postgres.url}/${postgres.schema}
    username: ${postgres.username}
    password: ${postgres.password}
    hikari:
      auto-commit: false
      connection-timeout: 250 # É uma configuração em milliseconds. O ideal é manter baixo para que estoure timeout logo e não prenda as threads.
      max-lifetime: 600000 # Tempo máximo que uma conexão pode ficar aberta (10 min) - security.
      maximum-pool-size: 20 # Mantemos até no máx 20 conexões com o banco de dados. O ideal é manter baixo mesmo, pois é algo custoso para o banco gerenciar. https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
      minimum-idle: 10
      pool-name: master

  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      "[hibernate.dialect]": org.hibernate.dialect.PostgreSQLDialect
      "[hibernate.generate_statistics]": false
      "[hibernate.connection.provider_disables_autocommit]": true
      # Para aumentar a performance ao máximo, desabilitamos o auto-commit e o open-in-view.
      # https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
#  rabbitmq:
#    host: ${amqp.host}
#    port: ${amqp.port}
#    username: ${amqp.username}
#    password: ${amqp.password}
#    dynamic: ${amqp.admin.auto-create}